Week 1:

Calibration (sensor reading)
In order to calibrate the phototransistor, we took sample data with different darkness lines.
Each transistor outputs values that corresponds to the amount of IR light that the sensors recieves.
  - Darker-colored prints should output higher values while whiter colors should be lower. 
While shfting the sample "path" from one end to another, we took 9 readings, spaning from -4 to +4cm, for 5 ticks each and recorded each values on a google sheet. 

Google Sheet
We took the average of 5 readings for each sensors, so that we have 9 lines of samples in total.
We then found the minimum value of each sensor and subtracted them from the readings for each sensor. 
  e.g.) If the minimum value of sensor 1 was x, subtract x from all sensor readings for sensor 1. 
Normalized all sensor readings using equation f(x) = x*10/max, where max is the max value after subtracting minimum value

Week 2: 

Re-calibration
We decided that the nine readings from the previous week wasn't enough, so we took measurements at every single tick mark and redid the callibration.
Then we created a function in our code to normalize the IR sensor readings and add them together to a single value based on our custom weighting.
This single value is our error term, and it tells us which direction and how fast the car needs to turn. We used 15, 14, 12, 8 weighting.

Week 3:

Testing:

Code adjustment: we added proportional control and the code to turn the wheels based on the IR sensor readings and Kp.
We also added code to detect a crosspiece by checking if the previous and the current readings are all black

Test #1

  - Observation: After placing the car on the track, we had to manually position it so that it detected the black line. The car started doing donuts after starting and continued.
    * The left wheel was moving forward while the right wheel was going backward. 
    * The speed of each wheel differed, even when the wheel was placed in the middle of the track.

Code adjustment: The pinMode definition of the right wheel was wrong. The direction pin should have been initialized to LOW but was set to HIGH. 

Test #2

  - Observation: The car followed the track all the way while the line was straight. The car zig zagged along the track and almost went off the track multiple times

Code adjustment: We adjusted our Kp so that the adjustmets when the car was to the side wouldn't be so extreme

Week 4:

Test #3

  - Observation: The car followed the line for the straight part and some of the curved parts. There was a lot less zig zagging, but still some

Code adjustment: We added derivative control and chose our value of Kd to be 0.5. This value is just a guess. We plan on seeing how the car drives on the track and adjusting it

